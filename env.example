# QuiC Environment Configuration
# Copy this file to .env.local and fill in your actual values

# ===================================
# REQUIRED FOR PRODUCTION DEPLOYMENT
# ===================================

# Admin token for accessing API key management functions
# Generate a secure random string (at least 32 characters)
ADMIN_TOKEN=your_secure_admin_token_here_32_chars_min

# Encryption key for securing stored API keys in Netlify Blobs
# Must be exactly 32 characters for AES-256 encryption
ENCRYPTION_KEY=your_32_character_encryption_key

# ===================================
# OPTIONAL (FALLBACK CONFIGURATION)
# ===================================

# Google Gemini API Key (fallback if not stored in Netlify Blobs)
# Get this from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# ===================================
# DEVELOPMENT CONFIGURATION
# ===================================

# Port for Netlify Dev server (default: 8888)
NETLIFY_DEV_PORT=8888

# Node environment (automatically set by deployment platforms)
NODE_ENV=development

# ===================================
# NETLIFY DEPLOYMENT VARIABLES
# ===================================
# These are typically set automatically by Netlify but can be overridden

# Site URL (automatically set by Netlify)
# URL=https://your-site-name.netlify.app

# Deploy context (automatically set by Netlify)
# CONTEXT=production

# ===================================
# SECURITY NOTES
# ===================================
# 
# 1. NEVER commit this file with real values to version control
# 2. Use strong, randomly generated values for ADMIN_TOKEN and ENCRYPTION_KEY
# 3. Rotate API keys regularly
# 4. Monitor API usage and set billing alerts
# 5. Use environment variables in your deployment platform's dashboard
#
# ===================================
# GENERATING SECURE VALUES
# ===================================
#
# For ADMIN_TOKEN (32+ characters):
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# For ENCRYPTION_KEY (exactly 32 characters):
# node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
#
# =================================== 